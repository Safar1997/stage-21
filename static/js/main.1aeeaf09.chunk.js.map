{"version":3,"sources":["actionCreators.js","components/login.jsx","components/signUp.jsx","components/main.jsx","reducer.js","App.jsx","index.jsx"],"names":["logInAction","email","password","type","profile","signUpAction","username","logOutAction","signUp","dispatch","axios","post","user","then","res","status","alert","console","log","catch","err","response","logIn","connect","state","actionCreators","history","defaultField","name","placeholder","Type","field","meta","style","width","margin","touched","error","className","color","validSchema","Yup","matches","min","max","required","initialValues","loged","onSubmit","values","actions","push","setSubmitting","validationSchema","props","isSubmitting","handleSubmit","boxSizing","marginTop","border","padding","borderRadius","Input","Password","disabled","htmlType","display","marginLeft","to","a","useEffect","reducer","action","App","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","customHistory","createBrowserHistory","basename","process","path","component","Main","exact","Login","SignUp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1aeeaf09.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport axios from 'axios';\n\nexport const logInAction = (email, password) => ({ type: 'LOGIN', profile: { email, password } });\n\nexport const signUpAction = ({ username, email, password }) => (\n  { type: 'SIGNUP', profile: { username, email, password } }\n);\n\nexport const logOutAction = () => ({ type: 'LOGOUT' });\n\nexport const signUp = ({ username, email, password }) => (dispatch) => {\n  axios.post('https://conduit.productionready.io/api/users', {\n    user: {\n      username,\n      email,\n      password,\n    },\n  })\n    .then((res) => {\n      if (res.status === 200) {\n        dispatch(signUpAction({ username, email, password }));\n      }\n      alert('Вы успешно зарегестрировались!');\n      console.log(res);\n      console.log(username, email, password);\n    })\n    .catch((err) => {\n      alert('This user is already exsist');\n      console.log(err.response);\n    });\n};\n\nexport const logIn = ({ email, password }) => () => axios\n  .post('https://conduit.productionready.io/api/users/login', {\n    user: {\n      email,\n      password,\n    },\n  });\n","/* eslint-disable no-param-reassign */\n/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Input, Button } from 'antd';\nimport { Formik, Field, Form } from 'formik';\nimport 'antd/dist/antd.css';\nimport * as Yup from 'yup';\nimport * as actionCreators from '../actionCreators';\n\nconst Login = ({\n  user, logIn, logInAction, history,\n}) => {\n  const defaultField = (name, type, placeholder, Type) => (\n    <Field name={name}>\n      {({\n        field, // { name, value, onChange, onBlur }\n        meta,\n      }) => (\n        <div>\n          <Type\n            type={type}\n            placeholder={placeholder}\n            {...field}\n            style={{ width: '200px', margin: '5px' }}\n          />\n          {meta.touched && meta.error && (\n            <div className=\"error\" style={{ color: 'red', margin: '5px' }}>{meta.error}</div>\n          )}\n        </div>\n      )}\n    </Field>\n  );\n\n  const validSchema = Yup.object({\n    password: Yup.string()\n      .matches(/^[a-zA-Z0-9]{0,}$/, 'Password have only latin letters and digits')\n      .min(8, 'Password is too short - should be 8 chars minimum.')\n      .max(40, 'Must be 40 characters or less')\n      .matches(/[0-9]+/, 'Password must contain at least one digit')\n      .matches(/[A-Z]+/, 'Password must contain an one uppercase character')\n      .required('You must enter password'),\n  });\n\n  return (\n    <Formik\n      initialValues={{\n        password: '',\n        email: '',\n        loged: false,\n      }}\n      onSubmit={(values, actions) => {\n        const { email, password } = values;\n        logIn(values)\n          .then((res) => {\n            if (res.status === 200) {\n              logInAction(email, password);\n              values.loged = true;\n            }\n            console.log(res);\n          })\n          .then(() => {\n            console.log(user.loged);\n            if (values.loged) {\n              history.push('/');\n            }\n          })\n          .catch((err) => {\n            alert('Incorrect email or password');\n            console.log(err);\n          });\n        actions.setSubmitting(false);\n      }}\n      validationSchema={validSchema}\n    >\n      {(props) => {\n        const { isSubmitting } = props;\n        return (\n          <Form\n            onSubmit={props.handleSubmit}\n            style={{\n              boxSizing: 'borderBox',\n              width: '300px',\n              margin: 'auto',\n              marginTop: '200px',\n              border: '1px solid gray',\n              padding: '10px',\n              borderRadius: '15px',\n            }}\n          >\n            Пожалуйста, залогиньтесь!\n            {defaultField('email', 'email', 'email', Input)}\n            {defaultField('password', 'password', 'Input password', Input.Password)}\n            <div />\n            <Button\n              disabled={isSubmitting}\n              type=\"primary\"\n              htmlType=\"submit\"\n              style={{ display: 'block', margin: '15px', marginLeft: '5px' }}\n            >\n              Log in\n            </Button>\n            <Link\n              style={{ margin: '15px' }}\n              to=\"/SignUp\"\n            >\n              SignUp\n            </Link>\n          </Form>\n        );\n      }}\n    </Formik>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  user: state,\n});\n\nexport default connect(mapStateToProps, actionCreators)(Login);\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nimport { Link } from 'react-router-dom';\n\nimport {\n  Input, Button,\n} from 'antd';\nimport {\n  Formik, Field, Form,\n} from 'formik';\n\nimport 'antd/dist/antd.css';\nimport * as Yup from 'yup';\nimport * as actionCreators from '../actionCreators';\n\n\nconst SignUp = ({ signUp, signUpAction }) => {\n  let alert;\n  const defaultField = (name, type, placeholder, Type) => (\n    <Field name={name}>\n      {({\n        field, // { name, value, onChange, onBlur }\n        meta,\n      }) => (\n        <div>\n          <Type\n            type={type}\n            placeholder={placeholder}\n            {...field}\n            style={{ width: '200px', margin: '5px' }}\n          />\n          {meta.touched && meta.error && (\n            <div className=\"error\" style={{ color: 'red', margin: '5px' }}>{meta.error}</div>\n          )}\n        </div>\n      )}\n    </Field>\n  );\n\n  const validSchema = Yup.object({\n    username: Yup.string()\n      .max(50, 'Must 50 characters or less')\n      .required('You must enter Name'),\n    password: Yup.string()\n      .matches(/^[a-zA-Z0-9]{0,}$/, 'Password have only latin letters and digits')\n      .min(8, 'Password is too short - should be 8 chars minimum.')\n      .max(40, 'Must be 40 characters or less')\n      .matches(/[0-9]+/, 'Password must contain at least one digit')\n      .matches(/[A-Z]+/, 'Password must contain an one uppercase character')\n      .required('You must enter password'),\n    email: Yup.string()\n      .email('Invalid email address')\n      .required('You must enter email'),\n  });\n\n  return (\n    <Formik\n      initialValues={{\n        username: '',\n        password: '',\n        email: '',\n      }}\n      onSubmit={async (values, actions) => {\n        await signUpAction(values);\n        await signUp(values);\n        actions.setSubmitting(false);\n      }}\n      validationSchema={validSchema}\n    >\n      {(props) => {\n        const { isSubmitting } = props;\n        return (\n          <Form\n            onSubmit={props.handleSubmit}\n            style={{\n              boxSizing: 'borderBox',\n              width: '300px',\n              margin: 'auto',\n              marginTop: '200px',\n              border: '1px solid gray',\n              padding: '10px',\n              borderRadius: '15px',\n            }}\n          >\n            {alert}\n            Пожалуйста, зарегестрируйтесь!\n            {defaultField('username', 'input', 'Input Name', Input)}\n            {defaultField('email', 'email', 'email', Input)}\n            {defaultField('password', 'password', 'Input password', Input.Password)}\n            <div />\n            <Button\n              disabled={isSubmitting}\n              type=\"primary\"\n              htmlType=\"submit\"\n              style={{ display: 'block', margin: '15px', marginLeft: '5px' }}\n            >\n              Sign Up\n            </Button>\n            <Link\n              style={{ margin: '15px' }}\n              to=\"/Login\"\n            >\n              Login\n            </Link>\n          </Form>\n        );\n      }}\n    </Formik>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  user: state,\n});\n\nexport default connect(mapStateToProps, actionCreators)(SignUp);\n","/* eslint-disable react/prop-types */\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Button } from 'antd';\nimport { Formik, Form } from 'formik';\n\nimport 'antd/dist/antd.css';\nimport * as actionCreators from '../actionCreators';\n\nconst Main = ({ user, logOutAction, history }) => {\n  useEffect(() => {\n    if (!user.loged) {\n      history.push('/login');\n    }\n  });\n\n  return (\n    <Formik\n      initialValues={{\n        username: '',\n      }}\n      onSubmit={async (values, actions) => {\n        await logOutAction();\n        actions.setSubmitting(false);\n      }}\n    >\n      {(props) => {\n        const { isSubmitting } = props;\n        return (\n          <Form\n            onSubmit={props.handleSubmit}\n            style={{\n              boxSizing: 'borderBox',\n              width: '300px',\n              margin: 'auto',\n              marginTop: '200px',\n              border: '1px solid gray',\n              padding: '10px',\n              borderRadius: '15px',\n            }}\n          >\n            <span>\n              Здравствуйте!\n              {' '}\n              {user.username}\n            </span>\n            <div />\n            <Button\n              disabled={isSubmitting}\n              type=\"primary\"\n              htmlType=\"submit\"\n              style={{ display: 'block', margin: '15px', marginLeft: '5px' }}\n            >\n              Exit\n            </Button>\n          </Form>\n        );\n      }}\n    </Formik>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  user: state,\n});\n\nexport default connect(mapStateToProps, actionCreators)(Main);\n","const reducer = (state = { loged: false }, action) => {\n  switch (action.type) {\n    case 'LOGIN':\n      return { ...state, ...action.profile, loged: true };\n    case 'SIGNUP':\n      return { ...state, ...action.profile };\n    case 'LOGOUT':\n      return { ...state, loged: false };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport { createBrowserHistory } from 'history';\nimport thunk from 'redux-thunk';\nimport Login from './components/login';\nimport SignUp from './components/signUp';\nimport Main from './components/main';\nimport reducer from './reducer';\n\nconst App = () => {\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  const store = createStore(reducer,\n    /* preloadedState, */ composeEnhancers(applyMiddleware(thunk)));\n  // const store = createStore(reducer, applyMiddleware(thunk));\n  const customHistory = createBrowserHistory();\n\n  return (\n    <Provider store={store}>\n      <Router basename={process.env.PUBLIC_URL}>\n        <Route path=\"/\" component={Main} exact history={customHistory} />\n        <Route path=\"/Login\" component={Login} history={customHistory} />\n        <Route path=\"/SignUp\" component={SignUp} />\n      </Router>\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}